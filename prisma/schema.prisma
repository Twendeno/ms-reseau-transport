// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Coordinate {
  uuid      String              @id @default(uuid())
  longitude Float
  latitude  Float
  latLng    String              @unique
  isStop    Boolean             @default(false)
  towns     Town[]
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  geometry  CoordinatePolygon[]
}

model Geometry {
  uuid        String              @id @default(uuid())
  type        String              @default("LineString")
  name        String              @unique @db.VarChar(50)
  reference   String              @unique @db.VarChar(50)
  departments Department[]
  towns       Town[]
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  coordinates CoordinatePolygon[]
}

model CoordinatePolygon {
  uuid String @id @default(uuid())

  geometry_uuid String
  geometry      Geometry @relation(fields: [geometry_uuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)

  coordinate_uuid String
  coordinate      Coordinate @relation(fields: [coordinate_uuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)

  assignedAt DateTime @default(now())
  assignedBy String
}

model Department {
  uuid           String   @id @default(uuid())
  name           String   @unique @db.VarChar(50)
  area           Float    @default(0)
  towns          Town[]
  geometry_uuid  String
  geometry       Geometry @relation(fields: [geometry_uuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)
  assignedBy     String
  lastModifiedBy String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Town {
  uuid            String     @id @default(uuid())
  name            String     @unique @db.VarChar(50)
  area            Float      @default(0)
  coordinate_uuid String
  coordinate      Coordinate @relation(fields: [coordinate_uuid], references: [uuid], onDelete: Restrict, onUpdate: Cascade)
  department_uuid String
  department      Department @relation(fields: [department_uuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)
  geometry_uuid   String
  geometry        Geometry   @relation(fields: [geometry_uuid], references: [uuid], onDelete: Cascade, onUpdate: Cascade)
  assignedBy      String
  lastModifiedBy  String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

// model District {
//   uuid          String   @id @default(uuid())
//   name          String   @unique
//   area          String
//   assignedBy    String
//   lastModifiedBy String
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt
// }
